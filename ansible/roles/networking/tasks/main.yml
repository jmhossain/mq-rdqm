- name: Check if firewalld is running
  ansible.builtin.command: "systemctl is-active firewalld"
  register: firewalld_active
  failed_when: firewalld_active.rc > 3

- name: Configure firewall for RDQM
  ansible.builtin.command: /opt/mqm/samp/rdqm/firewalld/configure.sh
  when: firewalld_active.rc == 0
  become: true

- name: Ifcfg eth1 vm1
  ansible.builtin.template:
    src: "ifcfg-eth1.j2"
    dest: "/etc/sysconfig/network-scripts/ifcfg-eth1"
  vars:
    IP1: "{{ hostvars[groups['rdqm'][0]].rdqm_ha_replication }}"
  when: inventory_hostname == groups["rdqm"][0]
  become: true

- name: Ifcfg eth1 vm2
  ansible.builtin.template:
    src: "ifcfg-eth1.j2"
    dest: "/etc/sysconfig/network-scripts/ifcfg-eth1"
  vars:
    IP1: "{{ hostvars[groups['rdqm'][1]].rdqm_ha_replication }}"
  when: inventory_hostname == groups["rdqm"][1]
  become: true

- name: Ifcfg eth1 vm3
  ansible.builtin.template:
    src: "ifcfg-eth1.j2"
    dest: "/etc/sysconfig/network-scripts/ifcfg-eth1"
  vars:
    IP1: "{{ hostvars[groups['rdqm'][2]].rdqm_ha_replication }}"
  when: inventory_hostname == groups["rdqm"][2]
  become: true

- name: Ifcfg eth1 dr vm1
  ansible.builtin.template:
    src: "ifcfg-eth1.j2"
    dest: "/etc/sysconfig/network-scripts/ifcfg-eth1"
  vars:
    IP1: "{{ hostvars[groups['dr'][0]].rdqm_ha_replication }}"
  when: inventory_hostname == groups["dr"][0]
  become: true

- name: Ifcfg eth1 dr vm2
  ansible.builtin.template:
    src: "ifcfg-eth1.j2"
    dest: "/etc/sysconfig/network-scripts/ifcfg-eth1"
  vars:
    IP1: "{{ hostvars[groups['dr'][1]].rdqm_ha_replication }}"
  when: inventory_hostname == groups["dr"][1]
  become: true

- name: Ifcfg eth1 dr vm3
  ansible.builtin.template:
    src: "ifcfg-eth1.j2"
    dest: "/etc/sysconfig/network-scripts/ifcfg-eth1"
  vars:
    IP1: "{{ hostvars[groups['dr'][2]].rdqm_ha_replication }}"
  when: inventory_hostname == groups["dr"][2]
  become: true

- name: Route eth1 vm1
  ansible.builtin.template:
    src: "route-eth1.j2"
    dest: "/etc/sysconfig/network-scripts/route-eth1"
  vars:
    IP1: "{{ rdqm_subnet_1 }}"
    IP2: "{{ hostvars[groups['rdqm'][1]].rdqm_ha_replication }}"
    IP3: "{{ hostvars[groups['rdqm'][2]].rdqm_ha_replication }}"
    IP4: "{{ hostvars[groups['dr'][0]].rdqm_ha_replication }}"
    IP5: "{{ hostvars[groups['dr'][1]].rdqm_ha_replication }}"
    IP6: "{{ hostvars[groups['dr'][2]].rdqm_ha_replication }}"
  when: inventory_hostname == groups["rdqm"][0]
  become: true

- name: Route eth1 vm2
  ansible.builtin.template:
    src: "route-eth1.j2"
    dest: "/etc/sysconfig/network-scripts/route-eth1"
  vars:
    IP1: "{{ rdqm_subnet_2 }}"
    IP2: "{{ hostvars[groups['rdqm'][0]].rdqm_ha_replication }}"
    IP3: "{{ hostvars[groups['rdqm'][2]].rdqm_ha_replication }}"
    IP4: "{{ hostvars[groups['dr'][0]].rdqm_ha_replication }}"
    IP5: "{{ hostvars[groups['dr'][1]].rdqm_ha_replication }}"
    IP6: "{{ hostvars[groups['dr'][2]].rdqm_ha_replication }}"
  when: inventory_hostname == groups["rdqm"][1]
  become: true

- name: Route eth1 vm3
  ansible.builtin.template:
    src: "route-eth1.j2"
    dest: "/etc/sysconfig/network-scripts/route-eth1"
  vars:
    IP1: "{{ rdqm_subnet_3 }}"
    IP2: "{{ hostvars[groups['rdqm'][0]].rdqm_ha_replication }}"
    IP3: "{{ hostvars[groups['rdqm'][1]].rdqm_ha_replication }}"
    IP4: "{{ hostvars[groups['dr'][0]].rdqm_ha_replication }}"
    IP5: "{{ hostvars[groups['dr'][1]].rdqm_ha_replication }}"
    IP6: "{{ hostvars[groups['dr'][2]].rdqm_ha_replication }}"
  when: inventory_hostname == groups["rdqm"][2]
  become: true

- name: Route eth1 dr vm1
  ansible.builtin.template:
    src: "route-eth1.j2"
    dest: "/etc/sysconfig/network-scripts/route-eth1"
  vars:
    IP1: "{{ dr_subnet_1 }}"
    IP2: "{{ hostvars[groups['dr'][1]].rdqm_ha_replication }}"
    IP3: "{{ hostvars[groups['dr'][2]].rdqm_ha_replication }}"
    IP4: "{{ hostvars[groups['rdqm'][0]].rdqm_ha_replication }}"
    IP5: "{{ hostvars[groups['rdqm'][1]].rdqm_ha_replication }}"
    IP6: "{{ hostvars[groups['rdqm'][2]].rdqm_ha_replication }}"
  when: inventory_hostname == groups["dr"][0]
  become: true

- name: Route eth1 dr vm2
  ansible.builtin.template:
    src: "route-eth1.j2"
    dest: "/etc/sysconfig/network-scripts/route-eth1"
  vars:
    IP1: "{{ dr_subnet_2 }}"
    IP2: "{{ hostvars[groups['dr'][0]].rdqm_ha_replication }}"
    IP3: "{{ hostvars[groups['dr'][2]].rdqm_ha_replication }}"
    IP4: "{{ hostvars[groups['rdqm'][0]].rdqm_ha_replication }}"
    IP5: "{{ hostvars[groups['rdqm'][1]].rdqm_ha_replication }}"
    IP6: "{{ hostvars[groups['rdqm'][2]].rdqm_ha_replication }}"
  when: inventory_hostname == groups["dr"][1]
  become: true

- name: Route eth1 dr vm3
  ansible.builtin.template:
    src: "route-eth1.j2"
    dest: "/etc/sysconfig/network-scripts/route-eth1"
  vars:
    IP1: "{{ dr_subnet_3 }}"
    IP2: "{{ hostvars[groups['dr'][0]].rdqm_ha_replication }}"
    IP3: "{{ hostvars[groups['dr'][1]].rdqm_ha_replication }}"
    IP4: "{{ hostvars[groups['rdqm'][0]].rdqm_ha_replication }}"
    IP5: "{{ hostvars[groups['rdqm'][1]].rdqm_ha_replication }}"
    IP6: "{{ hostvars[groups['rdqm'][2]].rdqm_ha_replication }}"
  when: inventory_hostname == groups["dr"][2]
  become: true

- name: Set a fixed hostname
  ansible.builtin.command: "hostnamectl --static set-hostname {{ inventory_hostname }}"
  become: true
